[use]
plugin = basics
plugin = spawn
# Choose a working directory

[env]
path = workingDirectory
value = /tmp/

[ZIPExtract]
path = fix("**/*.txt")
# !! ca ne marche pas si on met un path

[assign]
path = value
value = get("value").thru(buf => buf.toString())
# !! on perd le champ id qui contient le nom du fichier

# give unique tohen
[singleton]
[singleton/identify]
path = token

# save file , filename is content of "id"(token)
[spawn]
[spawn/FILESave]
location = get('token').replace('uid:', '').replace(/\W+/,'').prepend(env('workingDirectory')).append('/corpus/')
identifier = get('id').replace('uid:', '').split('/').pop()
content = get('value')

# Return last object and close de feed
# [debug]
# text = "Fin reception"
# {filename: '/tmp/corpus0/EamcmKzKZ.txt',...}
# {filename: ....}
[pop]
text = "etape apres POP"

# replace the object by a object with the corpus name =
[replace] 
path = token
value = get('filename').split('/').at(2)

[replace] 
path = token
value = get('token[0]')

[debug]
text = "Fin reception"
# { token: [ 'corpus0' ], status: 'file_append' }

# assign corpus field with the path corpus value
[assign]
path = corpus
value = get('token').prepend(env('workingDirectory')).trim().append('/corpus')

[debug]
text = "just before extraction"
# run termes extraction, return path of the result as a object

# in production mode, uncomment the following line
#cache = boost

[exec]
command=./launch_extraction.py
args=get('corpus')
args=fix('--output')
args=get('token')
args=fix('--url')
args=env('url')
args=fix('--topn')
args=env('topn')
args=fix('--lang')
args=fix('en')

[dump]
